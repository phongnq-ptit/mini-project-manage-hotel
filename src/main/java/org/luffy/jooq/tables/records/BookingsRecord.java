/*
 * This file is generated by jOOQ.
 */
package org.luffy.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.luffy.jooq.tables.Bookings;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingsRecord extends UpdatableRecordImpl<BookingsRecord> implements Record8<Integer, LocalDateTime, LocalDateTime, String, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>manage_hotel_v2.bookings.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.start_date</code>.
     */
    public void setStartDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.end_date</code>.
     */
    public void setEndDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.end_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.note</code>.
     */
    public void setNote(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.note</code>.
     */
    public String getNote() {
        return (String) get(3);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.comment</code>.
     */
    public void setComment(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.comment</code>.
     */
    public String getComment() {
        return (String) get(5);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.star</code>.
     */
    public void setStar(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.star</code>.
     */
    public Integer getStar() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>manage_hotel_v2.bookings.client_id</code>.
     */
    public void setClientId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.bookings.client_id</code>.
     */
    public Integer getClientId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, String, String, String, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, String, String, String, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Bookings.BOOKINGS.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Bookings.BOOKINGS.START_DATE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Bookings.BOOKINGS.END_DATE;
    }

    @Override
    public Field<String> field4() {
        return Bookings.BOOKINGS.NOTE;
    }

    @Override
    public Field<String> field5() {
        return Bookings.BOOKINGS.STATUS;
    }

    @Override
    public Field<String> field6() {
        return Bookings.BOOKINGS.COMMENT;
    }

    @Override
    public Field<Integer> field7() {
        return Bookings.BOOKINGS.STAR;
    }

    @Override
    public Field<Integer> field8() {
        return Bookings.BOOKINGS.CLIENT_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getStartDate();
    }

    @Override
    public LocalDateTime component3() {
        return getEndDate();
    }

    @Override
    public String component4() {
        return getNote();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getComment();
    }

    @Override
    public Integer component7() {
        return getStar();
    }

    @Override
    public Integer component8() {
        return getClientId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getStartDate();
    }

    @Override
    public LocalDateTime value3() {
        return getEndDate();
    }

    @Override
    public String value4() {
        return getNote();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getComment();
    }

    @Override
    public Integer value7() {
        return getStar();
    }

    @Override
    public Integer value8() {
        return getClientId();
    }

    @Override
    public BookingsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BookingsRecord value2(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public BookingsRecord value3(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public BookingsRecord value4(String value) {
        setNote(value);
        return this;
    }

    @Override
    public BookingsRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public BookingsRecord value6(String value) {
        setComment(value);
        return this;
    }

    @Override
    public BookingsRecord value7(Integer value) {
        setStar(value);
        return this;
    }

    @Override
    public BookingsRecord value8(Integer value) {
        setClientId(value);
        return this;
    }

    @Override
    public BookingsRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, String value4, String value5, String value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookingsRecord
     */
    public BookingsRecord() {
        super(Bookings.BOOKINGS);
    }

    /**
     * Create a detached, initialised BookingsRecord
     */
    public BookingsRecord(Integer id, LocalDateTime startDate, LocalDateTime endDate, String note, String status, String comment, Integer star, Integer clientId) {
        super(Bookings.BOOKINGS);

        setId(id);
        setStartDate(startDate);
        setEndDate(endDate);
        setNote(note);
        setStatus(status);
        setComment(comment);
        setStar(star);
        setClientId(clientId);
    }
}
