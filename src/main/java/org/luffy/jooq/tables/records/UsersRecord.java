/*
 * This file is generated by jOOQ.
 */
package org.luffy.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.luffy.jooq.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record8<Integer, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>manage_hotel_v2.users.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.phone</code>.
     */
    public void setPhone(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.phone</code>.
     */
    public String getPhone() {
        return (String) get(5);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.avatar</code>.
     */
    public void setAvatar(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.avatar</code>.
     */
    public String getAvatar() {
        return (String) get(6);
    }

    /**
     * Setter for <code>manage_hotel_v2.users.role</code>.
     */
    public void setRole(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.users.role</code>.
     */
    public String getRole() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.ADDRESS;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.PHONE;
    }

    @Override
    public Field<String> field7() {
        return Users.USERS.AVATAR;
    }

    @Override
    public Field<String> field8() {
        return Users.USERS.ROLE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public String component6() {
        return getPhone();
    }

    @Override
    public String component7() {
        return getAvatar();
    }

    @Override
    public String component8() {
        return getRole();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public String value6() {
        return getPhone();
    }

    @Override
    public String value7() {
        return getAvatar();
    }

    @Override
    public String value8() {
        return getRole();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public UsersRecord value8(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String email, String password, String name, String address, String phone, String avatar, String role) {
        super(Users.USERS);

        setId(id);
        setEmail(email);
        setPassword(password);
        setName(name);
        setAddress(address);
        setPhone(phone);
        setAvatar(avatar);
        setRole(role);
    }
}
