/*
 * This file is generated by jOOQ.
 */
package org.luffy.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.luffy.jooq.tables.Rooms;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoomsRecord extends UpdatableRecordImpl<RoomsRecord> implements Record9<Integer, Integer, Integer, String, Integer, Double, String, String, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>manage_hotel_v2.rooms.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.floor</code>.
     */
    public void setFloor(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.floor</code>.
     */
    public Integer getFloor() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.room_number</code>.
     */
    public void setRoomNumber(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.room_number</code>.
     */
    public Integer getRoomNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.room_type</code>.
     */
    public void setRoomType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.room_type</code>.
     */
    public String getRoomType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.capacity</code>.
     */
    public void setCapacity(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.capacity</code>.
     */
    public Integer getCapacity() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.price</code>.
     */
    public void setPrice(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.price</code>.
     */
    public Double getPrice() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.note</code>.
     */
    public void setNote(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.note</code>.
     */
    public String getNote() {
        return (String) get(7);
    }

    /**
     * Setter for <code>manage_hotel_v2.rooms.active</code>.
     */
    public void setActive(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>manage_hotel_v2.rooms.active</code>.
     */
    public Byte getActive() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, Integer, String, Integer, Double, String, String, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, Integer, String, Integer, Double, String, String, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Rooms.ROOMS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Rooms.ROOMS.FLOOR;
    }

    @Override
    public Field<Integer> field3() {
        return Rooms.ROOMS.ROOM_NUMBER;
    }

    @Override
    public Field<String> field4() {
        return Rooms.ROOMS.ROOM_TYPE;
    }

    @Override
    public Field<Integer> field5() {
        return Rooms.ROOMS.CAPACITY;
    }

    @Override
    public Field<Double> field6() {
        return Rooms.ROOMS.PRICE;
    }

    @Override
    public Field<String> field7() {
        return Rooms.ROOMS.DESCRIPTION;
    }

    @Override
    public Field<String> field8() {
        return Rooms.ROOMS.NOTE;
    }

    @Override
    public Field<Byte> field9() {
        return Rooms.ROOMS.ACTIVE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getFloor();
    }

    @Override
    public Integer component3() {
        return getRoomNumber();
    }

    @Override
    public String component4() {
        return getRoomType();
    }

    @Override
    public Integer component5() {
        return getCapacity();
    }

    @Override
    public Double component6() {
        return getPrice();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public String component8() {
        return getNote();
    }

    @Override
    public Byte component9() {
        return getActive();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getFloor();
    }

    @Override
    public Integer value3() {
        return getRoomNumber();
    }

    @Override
    public String value4() {
        return getRoomType();
    }

    @Override
    public Integer value5() {
        return getCapacity();
    }

    @Override
    public Double value6() {
        return getPrice();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public String value8() {
        return getNote();
    }

    @Override
    public Byte value9() {
        return getActive();
    }

    @Override
    public RoomsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RoomsRecord value2(Integer value) {
        setFloor(value);
        return this;
    }

    @Override
    public RoomsRecord value3(Integer value) {
        setRoomNumber(value);
        return this;
    }

    @Override
    public RoomsRecord value4(String value) {
        setRoomType(value);
        return this;
    }

    @Override
    public RoomsRecord value5(Integer value) {
        setCapacity(value);
        return this;
    }

    @Override
    public RoomsRecord value6(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public RoomsRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public RoomsRecord value8(String value) {
        setNote(value);
        return this;
    }

    @Override
    public RoomsRecord value9(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public RoomsRecord values(Integer value1, Integer value2, Integer value3, String value4, Integer value5, Double value6, String value7, String value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoomsRecord
     */
    public RoomsRecord() {
        super(Rooms.ROOMS);
    }

    /**
     * Create a detached, initialised RoomsRecord
     */
    public RoomsRecord(Integer id, Integer floor, Integer roomNumber, String roomType, Integer capacity, Double price, String description, String note, Byte active) {
        super(Rooms.ROOMS);

        setId(id);
        setFloor(floor);
        setRoomNumber(roomNumber);
        setRoomType(roomType);
        setCapacity(capacity);
        setPrice(price);
        setDescription(description);
        setNote(note);
        setActive(active);
    }
}
